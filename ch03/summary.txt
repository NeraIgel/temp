배열(array)은 거의 모든 프로그래밍 언어에서 기본적으로 제공되는 데이터 타입이다.
배열은 여러 개의 동일한 데이터 타입의 데이터를 한 번에 만들 때 사용된다.
배열은 메모리의 연속된 위치에 구현된다.

(1) 배열 ADT
배열은 C에서 기본적으로 제공하는 데이터 타입이지만, 배열의 핵심적인 내용을 보다 추상적으로 살펴보면 다음과 같다.

배열의 가장 기본적인 특징은 배열은 <인덱스, 요소> 쌍의 집합이라는 것이다.
즉, 인덱스(index)가 주어지면 해당하는 요소(element)가 대응되는 자료 구조이다. 배열에서는 인덱스를 사용하여 요소에 직접 접근한다.

Array ADT를 정의하면 다음과 같다.
-. 객체 : <인덱스, 요소> 쌍의 집합
-. 연산 : 
	a. create(n) ::= n개의 요소를 가진 배열의 생성
	b. retrieve(A, i) ::= 배열 A의 i번째 요소 반환
	c. store(A, i, tem) ::= 배열 A의 i번째 위치에 item 저장

(2) 배열의 응용 예시
	a. 다항식
		typedef struct s_polynomial
		{
			int	degree;				// 다항식의 차수
			float	coef[MAX_DEGREE];	// 다항식의 계수
		}	t_polynomial;

		int	main(void)
		{
			t_polynomial	a = {5, {3, 6, 0, 0, 0, 10}};
			t_polynomial	b = {4, {7, 0, 5, 0, 1}};
			t_polynomial	c;

			c = poly_add(a, b);
			return (0);
		}
	b. 희소 행렬
		int	main(void)
		{
			int		array1[ROWS][COLS] = {
						{2, 3, 0},
						{7, 0, 5}
					};
			int		array2[ROWS][COLS] = {
						{1, 0, 0},
						{1, 0, 0}
					};
			int		array3[ROWS][COLS];

			matrix_add(array1, array2, array3);
			return (0);
		}
