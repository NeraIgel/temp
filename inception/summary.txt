[Inception]
-. 개요 정리
	a. Docker를 사용하여 다양한 서비스로 구성된 소규모 인프라를 설정한다. (NGINX, WordPress+php-fpm, MariaDB)

	* Docker는 리눅스의 응용 프로그램들을 프로세스 격리 기술들을 사용하여 컨테이너로 실행하고 관리하는 오픈 소스 프로젝트이다.
	* Docker는 리눅스의 컨테이너를 실행하고 관리하는 도구이기 때문에, Mac 또는 Windows 운영체제에서 구동하기 위해서는 도커 데스크탑(유료) 또는 가상 머신을 사용해야 한다.
	* Dockerfile들을 미리 작성하여 준비하고, 가상 머신의 리눅스(게스트) 운영체제에 Docker를 설치 후 준비한 Dockerfile들을 빌드함으로써 Docker Image들을 생성하고 이를 바탕으로 Docker Container들을 실행시킬 수 있다.

-. 실행 방법 정의
	a. VirtualBox

	* 프로젝트는 가상 머신에서 실행된다.
	* 프로젝트 구성에 필요한 모든 파일은 srcs 폴더에 있어야 한다.
	* Makefile도 필요하며 디렉토리의 루트에 있어야 한다. Makefile은 반드시 모든 애플리케이션을 설정해야 한다. (즉, docker-compose.yml을 사용해서 도커 이미지들을 생성해야 한다.)

-. 기반 기술 정리
	a. https://www.docker.com/
		a-a. https://hub.docker.com/
		a-b. https://docs.docker.com
		a-c. https://github.com/moby/moby
	b. https://www.alpinelinux.org/
		b-a. https://wiki.alpinelinux.org/wiki/Main_Page
		b-b. https://docs.alpinelinux.org/user-handbook/0.1a/index.html
	c. https://www.debian.org/
		c-a. https://forums.debian.net/
		c-b. https://wiki.debianusers.or.kr/index.php?title=%EB%8C%80%EB%AC%B8
	d. https://www.nginx.com/
		d-a. https://nginx.org/en/docs/
		d-b. https://docs.nginx.com/nginx
	e. https://wordpress.com/
	f. https://mariadb.org/
		f-a. https://mariadb.org/documentation/

-. 검증 방법 정리
	a. subject

-. 자료 조사
	a. Docker
		a-a. https://docs.docker.com/get-started/
			a-a-a. https://docs.docker.com/get-started/02_our_app/
			a-a-b. https://docs.docker.com/get-started/03_updating_app/
			a-a-c. https://docs.docker.com/get-started/04_sharing_app/
			a-a-d. https://docs.docker.com/get-started/05_persisting_data/
			a-a-e. https://docs.docker.com/get-started/06_bind_mounts/
			a-a-f. https://docs.docker.com/get-started/07_multi_container/
			a-a-g. https://docs.docker.com/get-started/08_using_compose/
			a-a-h. https://docs.docker.com/get-started/09_image_best/
			a-a-i. https://docs.docker.com/get-started/11_what_next/
			a-a-j. https://docs.docker.com/get-started/overview/
		a-b. https://docs.docker.com/get-docker/
			a-b-a. https://docs.docker.com/engine/install/
			a-b-b. https://docs.docker.com/engine/install/ubuntu/
			a-b-c. https://docs.docker.com/engine/install/debian/
			a-b-d. https://docs.docker.com/engine/install/troubleshoot/
			a-b-e. https://docs.docker.com/engine/install/linux-postinstall/
		a-c. https://docs.docker.com/develop/
			a-c-a. https://docs.docker.com/develop/dev-best-practices/
			a-c-b. https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
			a-c-c. https://docs.docker.com/develop/security-best-practices/
			a-c-d. https://docs.docker.com/develop/remote-development/
			a-c-e. https://docs.docker.com/engine/reference/builder/
			a-c-f. https://docs.docker.com/build/building/multi-stage/
			a-c-g. https://docs.docker.com/build/building/base-images/
			a-c-h. https://docs.docker.com/compose/compose-file/
			a-c-i. https://docs.docker.com/network/
			a-c-j. https://docs.docker.com/storage/
			a-c-k. https://docs.docker.com/storage/volumes/
			a-c-l. https://docs.docker.com/storage/bind-mounts/
			a-c-m. https://docs.docker.com/get-started/kube-deploy/
			a-c-n. https://docs.docker.com/get-started/swarm-deploy/

			a-c-?. https://snyk.io/blog/10-best-practices-to-containerize-nodejs-web-applications-with-docker/

		a-d. https://docs.docker.com/language/
			a-d-a. https://docs.docker.com/language/nodejs/
			a-d-b. https://docs.docker.com/language/python/
			a-d-c. https://docs.docker.com/language/java/
			a-d-d. https://docs.docker.com/language/golang/
			a-d-e. https://docs.docker.com/language/dotnet/
	b. WSL2
		b-a. https://learn.microsoft.com/ko-kr/windows/wsl/install
		b-b. https://learn.microsoft.com/ko-kr/windows/wsl/install-manual
		b-c. https://learn.microsoft.com/ko-kr/windows/wsl/wsl-config
		b-d. https://learn.microsoft.com/ko-kr/windows/wsl/setup/environment
		b-e. https://learn.microsoft.com/ko-kr/windows/wsl/tutorials/wsl-containers
		b-f. https://docs.docker.com/desktop/windows/wsl/
		b-g. https://docs.docker.com/engine/install/ubuntu/
		b-h. https://docs.docker.com/engine/install/troubleshoot/
		b-i. https://docs.docker.com/engine/install/linux-postinstall/
		b-j. https://dev.epiloum.net/2063
		b-k. https://netmarble.engineering/docker-on-wsl2-without-docker-desktop/
		b-l. https://nickjanetakis.com/blog/install-docker-in-wsl-2-without-docker-desktop
		b-m. https://jink1982.tistory.com/48
	c. Alpine
	d. NGINX
	e. WordPress
	f. MariaDB
	g. Makefile for docker
	h. Debian configuration for docker
		h-a. https://wiki.debianusers.or.kr/index.php?title=%EB%B2%84%EC%B6%94%EC%96%BC%EB%B0%95%EC%8A%A4%EC%97%90_%EB%8D%B0%EB%B9%84%EC%95%88_%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0
		h-b. https://wiki.debianusers.or.kr/index.php?title=%EB%8D%B0%EB%B9%84%EC%95%88_10(buster)_%EC%84%A4%EC%B9%98
		h-c. https://developer-eun-diary.tistory.com/135

	* https://bigpel66.oopy.io/library/docker/docker
	* https://bigpel66.oopy.io/library/42/inner-circle/20
	* https://bigpel66.oopy.io/library/42/reference/20#7790b675-e312-403e-b3ff-d1887b76f4f5
	* https://80000coding.oopy.io/969858b3-0baf-4f5a-a8b2-6749021601c6#969858b3-0baf-4f5a-a8b2-6749021601c6
	* https://80000coding.oopy.io/d6e6ca38-d413-47ba-a80b-a1b4f40886ab#d6e6ca38-d413-47ba-a80b-a1b4f40886ab
	* https://80000coding.oopy.io/8e5f46b5-c0b1-44d5-ac77-3446bbaf8ffa#8e5f46b5-c0b1-44d5-ac77-3446bbaf8ffa
	* https://80000coding.oopy.io/3305be9c-43a0-4371-9109-d729def6210b#3305be9c-43a0-4371-9109-d729def6210b
	* https://learn.microsoft.com/ko-kr/visualstudio/docker/tutorials/tutorial-multi-container-app-mysql

-. 자료 조사 (임시)
	b. Alpine
		b-a. https://www.docker.com/blog/how-to-use-the-alpine-docker-official-image/
		b-b. https://github.com/alpinelinux/docker-alpine
		b-c. https://www.alpinelinux.org/releases/
		b-d. https://wiki.alpinelinux.org/wiki/Installation#Post-Installation
		b-e. https://wiki.alpinelinux.org/wiki/Alpine_Package_Keeper
		b-f. https://wiki.alpinelinux.org/wiki/Alpine_Package_Keeper#Add_a_Package
		b-g. https://wiki.alpinelinux.org/wiki/Repositories#Managing_repositories
		b-h. https://wiki.alpinelinux.org/wiki/OpenRC
		b-i. https://hub.docker.com/_/alpine
		b-j. https://hello-bryan.tistory.com/166
		b-k. https://knsesang2000.tistory.com/14
		b-l. https://knsesang2000.tistory.com/389
		b-m. https://42born2code.slack.com/archives/CU6MU5TB7/p1616576215022600
		b-n. https://www.techtarget.com/searchitoperations/tutorial/Use-Docker-and-Alpine-Linux-to-build-lightweight-containers
	c. NGINX
		c-?. https://docs.nginx.com/nginx/admin-guide/installing-nginx/installing-nginx-open-source/
		c-a. https://www.docker.com/blog/how-to-build-and-run-next-js-applications-with-docker-compose-nginx/
		c-b. https://www.nginx.com/blog/deploying-nginx-nginx-plus-docker-2/
		c-c. https://nginx.org/en/linux_packages.html#Alpine
		c-d. https://nginx.org/en/docs/http/configuring_https_servers.html
		c-e. https://www.digitalocean.com/community/tutorials/how-to-run-nginx-in-a-docker-container-on-ubuntu-22-04
		c-f. https://stackoverflow.com/questions/65627946/how-to-start-nginx-server-within-alpinelatest-image-using-rc-service-command
		c-g. https://wiki.alpinelinux.org/wiki/Nginx
		c-h. https://hub.docker.com/_/nginx

-. 개발 환경 정의
	a. Windows10 WSL2 Ubuntu 18.04(LTS)
		a-a. Uninstall old versions
			a-a-a. sudo apt-get remove docker docker-engine docker.io containerd runc
			a-a-b. sudo rm -rf /var/lib/docker
			a-a-c. sudo rm -rf /var/lib/containerd
		a-b. Install using the apt repository
			a-b-a. sudo apt-get update
			a-b-b. sudo apt-get install ca-certificates curl gnupg
			a-b-c. sudo install -m 0755 -d /etc/apt/keyrings
			a-b-d. curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
			a-b-e. sudo chmod a+r /etc/apt/keyrings/docker.gpg
			a-b-f. echo "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
			a-b-g. sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
			a-b-h. sudo service docker start
			a-b-i. sudo docker compose version
			a-b-j. sudo docker --version
			a-b-k. sudo docker version
			a-b-l. sudo docker ps
		a-c. Manage Docker as a non-root user
			a-c-a. sudo groupadd docker
			a-c-b. sudo usermod -aG docker $USER
			a-c-c. docker ps
			a-c-d. 
		a-d. Configure Docker to start on WSL launch
			a-d-a. echo '' >> ~/.profile
			a-d-b. echo '# start docker daemon automatically when logging in wsl shell' >> ~/.profile
			a-d-c. echo 'if [ -z "$(ps aux | grep dockerd | grep -v grep)" ] ; then' >> ~/.profile
			a-d-d. echo '    if [ -z "$(service docker status 2>&1 | grep -q "is not running")" ] ; then' >> ~/.profile
			a-d-e. echo '        wsl.exe --distribution "${WSL_DISTRO_NAME}" --user root --exec /usr/sbin/service docker start > /dev/null 2>&1' >> ~/.profile
			a-d-f. echo '    fi' >> ~/.profile
			a-d-g. echo 'fi' >> ~/.profile
	b. Alpine 3.16 in a Docker Container
		b-a. Add OpenRC package
			b-a-a. apk update
			b-a-b. apk add --no-cache openrc
	c. iMac VirtualBox Debian

-. 단위기능 목록 정의
	a. TLSv1.2 또는 TLSv1.3만 있는 NGINX를 포함하는 도커 컨테이너
	b. nginx 없이 WordPress+php-fpm만 포함하는 도커 컨테이너
	c. nginx 없이 MariaDB만 포함하는 도커 컨테이너
	d. docker-compose.yml
		d-a. WordPress 데이터베이스가 포함된 볼륨
		d-b. WordPress 웹사이트 파일이 포함된 두 번째 볼륨
		d-c. 도커 컨테이너 간의 연결을 설정하는 도커 네트워크

	* 서비스는 컨테이너에서 실행되어야 한다.
	* 서비스는 하나씩 자체 Dockerfile을 작성해야 한다.
	* 도커 이미지는 Alpine 또는 Debian의 두 번째 안정적인 버전(최신 버전의 이전 버전)에서 만들어져야 한다.
	* 도커 이미지를 직접 만들어야 하며, DockerHub와 같은 서비스를 사용하는 것뿐만 아니라 만들어진 도커 이미지를 가져오는 것은 금지된다. (단, Alpine/Debian은 이 규칙에서 제외된다.)

-. 디렉토리 구조 정의
	— Makefile
	— srcs
		|- doker-compose.yml
		|- .env
		|- requirements
			|- mariadb
				|- conf
				|- Dockerfile
				|- .dockerignore
				|- tools
			|- nginx
				|- conf
				|- Dockerfile
				|- .dockerignore
				|- tools
			|- tools
			|- wordpress
				|- conf
				|- Dockerfile
				|- .dockerignore
				|- tools

-. 학습 참고 사이트
	a. Docker
		a-a. https://en.wikipedia.org/wiki/Docker_(software)
		a-b. https://www.44bits.io/ko/keyword/linux-container
		a-c. https://www.44bits.io/ko/post/why-should-i-use-docker-container
		a-d. https://www.44bits.io/ko/post/building-docker-image-basic-commit-diff-and-dockerfile
		a-e. https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html
		a-f. https://subicura.com/2017/01/19/docker-guide-for-beginners-2.html
		a-g. https://byungwoo.oopy.io/0e5485ba-dc5e-4951-a611-81ce08291817
		a-h. https://subicura.com/2017/02/10/docker-guide-for-beginners-create-image-and-deploy.html
		a-i. https://subicura.com/2016/06/07/zero-downtime-docker-deployment.html
		a-j. https://cultivo-hy.github.io/docker/image/usage/2019/03/14/Docker%EC%A0%95%EB%A6%AC/
		a-k. https://asung123456.tistory.com/51
		a-l. https://swalloow.github.io/container-tini-dumb-init/
		a-m. https://www.hahwul.com/2022/08/06/docker-dumb-init/
		a-n. https://cloud.google.com/architecture/best-practices-for-building-containers?hl=ko#signal-handling
		a-o. https://developers.redhat.com/blog/2018/02/22/container-terminology-practical-introduction
		a-p. https://medium.com/@saschagrunert/demystifying-containers-part-i-kernel-space-2c53d6979504
		a-q. https://medium.com/@saschagrunert/demystifying-containers-part-ii-container-runtimes-e363aa378f25
		a-r. https://medium.com/@saschagrunert/demystifying-containers-part-iii-container-images-244865de6fef
		a-s. https://engineer-mole.tistory.com/221
		a-t. https://darrengwon.tistory.com/793
		a-u. https://valuelog.tistory.com/69
		a-v. https://shinjam.tistory.com/entry/docker-compose-VS-docker-compose?category=891607
		a-w. https://stackoverflow.com/questions/66514436/difference-between-docker-compose-and-docker-compose
	b. Alpine
	c. NGINX
	d. WordPress
	e. MariaDB

-. 학습 참고 사이트 (임시)
	x. https://namu.wiki/w/Alpine%20Linux
	y. https://en.wikipedia.org/wiki/Alpine_Linux
	z. https://velog.io/@dry8r3ad/why-alpine-linux
	A. https://ko.wikipedia.org/wiki/Nginx
	B. https://namu.wiki/w/NGINX
	C. https://namu.wiki/w/TLS
	D. https://dkswnkk.tistory.com/513
	E. https://dkswnkk.tistory.com/503?category=551275
	F. https://dkswnkk.tistory.com/506?category=551275
	G. https://icarus8050.tistory.com/57
	H. https://whatisthenext.tistory.com/123
	I. https://12bme.tistory.com/366
	J. https://nginxstore.com/blog/nginx/%EA%B0%80%EC%9E%A5-%EB%A7%8E%EC%9D%B4-%EC%8B%A4%EC%88%98%ED%95%98%EB%8A%94-nginx-%EC%84%A4%EC%A0%95-%EC%97%90%EB%9F%AC-10%EA%B0%80%EC%A7%80/

